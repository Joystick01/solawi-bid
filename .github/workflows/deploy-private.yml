name: CI Pipeline
on:
  workflow_dispatch:
  push:
    branches:
      # - main
      - devops/SMA-145/setup-workflow
    #paths-ignore:
    #  - '.github/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.github/**'
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set env variables database
        uses: ./.github/actions/set-env-vars-database
        with:
          environment: prod
          mysqlDatabase: ${{vars.MYSQL_DATABASE}}
          mysqlUser: ${{vars.MYSQL_USER}}
          mysqlPassword: ${{secrets.MYSQL_PASSWORD}}
          mysqlRootPassword: ${{secrets.MYSQL_ROOT_PASSWORD}}

      - name: Set env variables frontend
        uses: ./.github/actions/set-env-vars-frontend
        with:
          environment: prod #${{ vars.ENVIRONMENT }}
          frontendUrl: https://solyton.org
          frontendPort: 443 # 80
          backendUrl: https://bid.solyton.org
          backendPort: 443 # 8080

      - name: Setup JDK, Gradle and Caches
        uses: ./.github/actions/setup

      - name: Build
        run: ./gradlew build -x test

      - name: Set env variables backend
        uses: ./.github/actions/set-env-vars-backend
        with:
          environment: prod #${{ vars.ENVIRONMENT }}
          # frontendUrl:
          # frontendPort:
          # backendUrl:
          # backendPort:
          appOwnerUsername: ${{ secrets.APPLICATION_OWNER_USERNAME }}
          appOwnerPassword: ${{ secrets.APPLICATION_OWNER_PASSWORD }}

          jwtSecret: ${{ secrets.JWT_SECRET }}
          jwtRealm: ${{ vars.JWT_REALM }}
          jwtDomain: ${{ vars.JWT_DOMAIN }}
          jwtAudience: ${{ vars.JWT_AUDIENCE }}

          databaseDriver: ${{ vars.DATABASE_DRIVER }}
          databaseUser: ${{ vars.DATABASE_USER }}
          databasePassword: ${{ secrets.DATABASE_PASSWORD }}
          databaseUrl: ${{ vars.DATABASE_URL }}

      - name: Collect
        uses: ./.github/actions/collect-artifacts
        with:
          baseFolder: deploy

      - uses: actions/upload-artifact@v4
        with:
          name: deploy
          path: deploy/**/*

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: deploy
          path: deploy/
      - name: Rsync
        run: |
          mv deploy/solawi-bid-frontend/e.env deploy/solawi-bid-frontend/.env
          mv deploy/solawi-bid-database/e.env deploy/solawi-bid-database/.env
          
          rsync -avr -e 'ssh -p ${{ secrets.SOLYTON_SSH_PORT }}' --delete deploy/ ${{ vars.SOLYTON }}

      - name: Deploy via SSH
        if: false
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_SOLYTON_HOST }}
          username: ${{ secrets.SSH_SOLYTON_USER }}
          key: ${{ secrets.SOLYTON_SSH_KEY }}
          port: ${{ secrets.SOLYTON_SSH_PORT }}
          script: |
            cd /home/solawi-bid
            docker-compose down   # Stop running containers
            docker-compose up --build -d  # Rebuild and restart containers
            docker system prune -f  # Cleanup unused Docker images

      - name: Cleanup
        if: always()
        run: |
          rm -rf deploy/
          

      #- name: Debug - List files
      #  run: |
      #    ls


      #- name: Run Backend tests
      #  uses: ./.github/actions/test-backend

      #- name: Run Frontend tests
      #  uses: ./.github/actions/test-frontend