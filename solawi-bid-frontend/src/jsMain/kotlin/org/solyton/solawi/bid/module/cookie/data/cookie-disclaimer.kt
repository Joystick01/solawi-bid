// This file has been partially auto generated. 
// Please don't make any changes to the lenses.
// Feel free to add or remove annotated properties from
// the generator data class. The corresponding lenses 
// will be removed or added on the next run of the 
// lens generator. See below for more details.
package org.solyton.solawi.bid.module.cookie.data

import org.evoleq.optics.Lensify
import org.evoleq.optics.ReadWrite
import org.evoleq.optics.lens.Lens

/**
 * Generator class.
 * Feel free to add or remove annotated properties from
 * the class. Make sure that they are annotated with
 * - @ReadOnly
 * - @ReadWrite
 * If you want that a property-lens will be generated
 * on the next run of the lens generator.
 * If not, just omit the annotation or annotate it with @Ignore.
 */
@Lensify data class CookieDisclaimer(
    @ReadWrite val isConfirmed: Boolean = false,
    @ReadWrite val isShown: Boolean = false
)

/**
 * Autogenerated Lens.
 * Read and manipulate [CookieDisclaimer.isConfirmed]
 */
@ReadWrite val isConfirmed: Lens<CookieDisclaimer, Boolean> by lazy{ Lens(
    get = {whole -> whole.isConfirmed},
    set = {part -> {whole -> whole.copy(isConfirmed = part)}}
) }
/**
 * Autogenerated Setter of a Pseudo Lens
 * Manipulate [CookieDisclaimer.isConfirmed]
 */
@ReadWrite fun CookieDisclaimer.isConfirmed(set: Boolean.()->Boolean ): CookieDisclaimer = copy(isConfirmed = set(isConfirmed)) 
/**
 * Autogenerated Lens.
 * Read and manipulate [CookieDisclaimer.isShown]
 */
@ReadWrite val isShown: Lens<CookieDisclaimer, Boolean> by lazy{ Lens(
    get = {whole -> whole.isShown},
    set = {part -> {whole -> whole.copy(isShown = part)}}
) }
/**
 * Autogenerated Setter of a Pseudo Lens
 * Manipulate [CookieDisclaimer.isShown]
 */
@ReadWrite fun CookieDisclaimer.isShown(set: Boolean.()->Boolean ): CookieDisclaimer = copy(isShown = set(isShown)) 
