// This file has been partially auto generated. 
// Please don't make any changes to the lenses.
// Feel free to add or remove annotated properties from
// the generator data class. The corresponding lenses 
// will be removed or added on the next run of the 
// lens generator. See below for more details.
package org.solyton.solawi.bid.module.bid.data

import org.evoleq.optics.Lensify
import org.evoleq.optics.ReadOnly
import org.evoleq.optics.ReadWrite
import org.evoleq.optics.lens.Lens
import kotlinx.datetime.LocalDate as Date

/**
 * Generator class.
 * Feel free to add or remove annotated properties from
 * the class. Make sure that they are annotated with
 * - @ReadOnly
 * - @ReadWrite
 * If you want that a property-lens will be generated
 * on the next run of the lens generator.
 * If not, just omit the annotation or annotate it with @Ignore.
 */
@Lensify data class Auction(
    @ReadOnly val id: String,
    @ReadWrite val name: String,
    @ReadWrite val date: Date
)

/**
 * Autogenerated ReadOnly Lens.
 * Read [Auction.id]
 */
@ReadOnly val id: Lens<Auction, String> by lazy{ Lens(
    get = {whole -> whole.id},
    set = {{it}}
) }
/**
 * Autogenerated Lens.
 * Read and manipulate [Auction.name]
 */
@ReadWrite val name: Lens<Auction, String> by lazy{ Lens(
    get = {whole -> whole.name},
    set = {part -> {whole -> whole.copy(name = part)}}
) }
/**
 * Autogenerated Setter of a Pseudo Lens
 * Manipulate [Auction.name]
 */
@ReadWrite fun Auction.name(set: String.()->String ): Auction = copy(name = set(name)) 
/**
 * Autogenerated Lens.
 * Read and manipulate [Auction.date]
 */
@ReadWrite val date: Lens<Auction, Date> by lazy{ Lens(
    get = {whole -> whole.date},
    set = {part -> {whole -> whole.copy(date = part)}}
) }
/**
 * Autogenerated Setter of a Pseudo Lens
 * Manipulate [Auction.date]
 */
@ReadWrite fun Auction.date(set: Date.()->Date ): Auction = copy(date = set(date)) 
