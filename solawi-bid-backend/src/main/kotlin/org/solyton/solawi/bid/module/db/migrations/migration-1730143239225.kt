package org.solyton.solawi.bid.module.db.migrations

import org.evoleq.exposedx.migrations.Migration
import org.jetbrains.exposed.sql.*
import org.solyton.solawi.bid.module.db.schema.*

/**
 * Autogenerated [Migration],
 * generated by the evoleq/exposedx migration gradle-plugin.
 * Alter with care!
 *
 * Generated at Mon Oct 28 20:20:39 CET 2024
 *
 * Description: ...
 */
class Migration1730143239225(
    override val database: Database
) : Migration {

    /**
     * Id of the migration, do not change!
     */
    override val id: Long
        get() = 1730143239225

    /**
     * Upwards migration
     */
    override suspend fun Transaction.up() {
        SchemaUtils.create(Contexts, Rights, Roles, RoleRightContexts)
        // Contexts
        val applicationContextId = Contexts.insertAndGetId {
            it[name] = "APPLICATION"
        }
        Contexts.insert {
            it[name] = "AUCTION"
        }
        Contexts.insert {
            it[name] = "AUCTION/MANAGEMENT"
        }

        // Roles
        val ownerRoleId = Roles.insertAndGetId {
            it[name] = "OWNER"
            it[description] = "Owner owns a resource or context"
        }
        Roles.insert {
            it[name] = "MANAGER"
            it[description] = "Manages a resource or context"
        }
        Roles.insert {
            it[name] = "BIDDER"
            it[description] = "Participant in a bid-round, context: AUCTION"
        }

        // Rights
        val createId = Rights.insertAndGetId {
            it[name] = "CREATE"
            it[Roles.description] = "Create something in a context"
        }
        Rights.insert {
            it[name] = "READ"
            it[Roles.description] = "Read something in a context"
        }
        Rights.insert {
            it[name] = "UPDATE"
            it[Roles.description] = "Update something in a context"
        }
        Rights.insert {
            it[name] = "DELETE"
            it[Roles.description] = "Delete something in a context"
        }

        // user has been added in the previous migration
        val applicationOwner = User.find{ Users.username eq "schmidt@alpha-structure.com"}.first()

        RoleRightContexts.insert {
            it[contextId] = applicationContextId
            it[roleId] = ownerRoleId
            it[rightId] = createId
        }
    }

    /**
     * Downwards migration (inverse to the upward migration).
     * These migrations are not taken into account by now!
     */
    override suspend fun Database.down() {
        TODO("Not yet implemented")
    }
}